package com.company.ext_operators


// Kotlin поддерживает стиль функционального программирования, известный как "хвостовая рекурсия".
// Это позволяет использовать циклические алгоритмы вместо рекурсивных функции, но без риска переполнения стэка.
// Когда функция помечена модификатором tailrec и её форма отвечает требованиям компилятора, он оптимизирует рекурсию,
// оставляя вместо неё быстрое и эффективное решение этой задачи, основанное на циклах.
// Для соответствия требованиям tailrec, функция должна вызывать сама себя в качестве последней операции, которую она предпринимает.
// Вы не можете использовать хвостовую рекурсию, когда существует ещё какой-то код после вызова этой самой рекурсии.
tailrec fun factorial2(step: Int, value: Int = 1): Int {
    val newValue = step * value
    return if (step == 1) newValue else factorial2(step - 1, newValue)
}

fun factorial(n: Int): Int {
    return if (n == 1) n else
        n * factorial(n - 1)
}

class Test2 {
    companion object {
        @JvmStatic
        fun main(args: Array<String>) {
            println(factorial2(4))

        }
    }
}