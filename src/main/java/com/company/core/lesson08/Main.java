package com.company.core.lesson08;


class Main {

    public static void main(String[] args) {
        // —É—á–∞—Å—Ç–Ω–∏–∫–∏
        Participant[] p = initParticipiants();

        // –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è
        Obstacle[] o = initObstacles();

        startGame(p, o);// –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–±–µ–≥

        if (checkAllFinish(p)) {
            System.out.println("–ü–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –Ω–µ—Ç");
        } else {
            showChampions(p);
        }
    }

    private static Obstacle[] initObstacles() {
        return new Obstacle[]{
                new Wall(6),
                new Road(250),
                new Wall(9),
                new Road(260)
        };
    }

    static Participant[] initParticipiants() {
        return new Participant[]{
                new Human("–ò–≤–∞–Ω", 200, 10),
                new Human("–ü–µ—Ç—Ä", 250, 9),
                new Human("–°—Ç–∞—Å", 300, 11),
                new Robot("Android_1", 400, 9),
                new Robot("Android_2", 500, 8),
                new Cat("–ë–∞—Ä—Å–∏–∫", 180, 20),
                new Cat("–ú—É—Ä–∑–∏–∫", 260, 15),
        };
    }


    private static void startGame(Participant[] p, Obstacle[] o) {
        for (int i = 0; i < o.length; i++) {
            System.out.println(o[i]);

            for (int j = 0; j < p.length; j++) {
                if (p[j].isFinish()) continue;// –≤—ã–±—ã–≤—à–∏—Ö –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º

                if (o[i].checkAction(p[j]) == false) {
                    System.out.println(p[j] + " –Ω–µ –ø—Ä–æ—à–µ–ª –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ –∏ –≤—ã–±—ã–≤–∞–µ—Ç");
                    p[j].setFinish(true);
                }
            }
            System.out.println("--------");
            if (checkAllFinish(p)) break;//—É—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–Ω—á–∏–ª–∏—Å—å - –∫–æ–Ω–µ—Ü –ø–æ–ª–æ—Å—ã
        }//for
    }


    private static void showChampions(Participant[] participants) {
        StringBuilder sb = new StringBuilder();
        sb.append("üëëüëëüëë –ù–∞—à–∏ —á–µ–º–ø–∏–æ–Ω—ã üëëüëëüëë \n");
        for (Participant p : participants) {
            if (!p.isFinish())
                sb.append(p + "\n");
        }
        System.out.println(sb);
    }


    private static boolean checkAllFinish(Participant[] participants) {
        for (Participant p : participants) {
            if (!p.isFinish())
                return false;
        }
        return true;
    }
}